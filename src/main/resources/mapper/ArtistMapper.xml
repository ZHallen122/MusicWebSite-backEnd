<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.musicwebsitebackend.dao.ArtistMapper">
    <resultMap id="BaseResultMap" type="com.music.musicwebsitebackend.entity.Artist" >
        <id column="artist_id"  jdbcType="INTEGER" property="artist_id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="birth" jdbcType="TIMESTAMP" property="birth"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="introduction" jdbcType="LONGVARCHAR" property="introduction"/>
    </resultMap>

    <sql id="Base_Column_List">
        artist_id,name,sex,pic,birth,location,introduction
    </sql>

    <insert id="insertArtist" parameterType="com.music.musicwebsitebackend.entity.Artist">
        insert into Artist
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="artist_id != null">
                artist_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="introduction != null">
                introduction,
            </if>

        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="pic != null" >
                #{pic,jdbcType=VARCHAR},
            </if>
            <if test="birth != null" >
                #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null" >
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null" >
                #{introduction,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateArtist" parameterType="com.music.musicwebsitebackend.entity.Artist" >
        update Artist
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="pic != null" >
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="birth != null" >
                birth = #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null" >
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null" >
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
        </set>
        where artist_id = #{artist_id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.music.musicwebsitebackend.entity.Artist" >
        update Artist
        set name = #{name,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=TINYINT},
        pic = #{pic,jdbcType=VARCHAR},
        birth = #{birth,jdbcType=TIMESTAMP},
        location = #{location,jdbcType=VARCHAR},
        introduction = #{introduction,jdbcType=VARCHAR}
        where artist_id = #{artist_id,jdbcType=INTEGER}
    </update>

    <delete id="deleteArtist" parameterType="java.lang.Integer" >

        delete from Artist
        where artist_id = #{artist_id,jdbcType=INTEGER}
    </delete>

    <select id="findArtist" resultType="com.music.musicwebsitebackend.entity.Artist" parameterType="java.lang.Integer" >
        select*
        from Artist
        where artist_id = #{artist_id,jdbcType=INTEGER}
    </select>
    <select id="findAllArtist" resultType="com.music.musicwebsitebackend.entity.Artist">
        select *
        from Artist
    </select>
    <select id="findArtistByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select *
        from Artist
        where name like #{name, jdbcType=VARCHAR}
    </select>

</mapper>
